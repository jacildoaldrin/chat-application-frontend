{"version":3,"sources":["components/Chatroom/Chatroom.js","components/Login/Login.js","components/Inputbox/Inputbox.js","components/Message/Message.js","components/Chatbox/Chatbox.js","components/Rooms/Rooms.js","components/Chatinfo/Chatinfo.js","components/Roomsinfo/Roomsinfo.js","components/Join/Join.js","components/Admin/SubComponentsAdmin/events.js","components/Admin/SubComponentsAdmin/messages.js","components/Admin/SubComponentsAdmin/room-list.js","components/Admin/SubComponentsAdmin/rooms.js","components/Admin/SubComponentsAdmin/tabs.js","components/Admin/Admin.js","App.js","serviceWorker.js","index.js"],"names":["socket","Login","useState","username","setUsername","password","setPassword","Boolean","condition","setCondition","useEffect","axios","post","headers","then","res","data","id","className","type","placeholder","onChange","event","target","value","required","onClick","preventDefault","to","Inputbox","message","sendMessage","setMessage","onSubmit","Message","props","content","user","roomname","Chatbox","messages","map","index","key","Rooms","rooms","room","currentroom","switchRoom","Chatinfo","Roomsinfo","Chatroom","location","setName","setRoom","setRooms","setMessages","queryString","parse","search","getRooms","io","emit","on","get","newRoom","Join","pathname","style","color","AdminEvents","wrapper","React","createRef","state","columns","label","field","sort","width","rows","this","fetchEvents","setState","newArr","x","_id","date","Moment","Date","format","time","description","push","striped","bordered","small","Component","AdminMessages","sender","hover","show","currId","newRoomName","newRoomStatus","myRooms","console","log","roomNameArg","roomStatusArg","fetchRooms","roomId","roomName","roomStatus","dateStringify","now","toString","put","edited","status","alert","window","reload","myRoom","created","Button","variant","handleShow","marginLeft","marginRight","marginTop","Table","renderTableData","Modal","onHide","handleClose","Header","closeButton","Title","Body","Form","editRoom","Group","controlId","Label","Control","handleChangeRoom","as","handleChangeStatus","Footer","RoomAdd","setShow","setRoomName","setRoomStatus","margin","AdminTabs","Tabs","defaultActiveKey","Tab","eventKey","title","Admin","App","path","exact","component","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error"],"mappings":"6ZAsBIA,E,kFC6DWC,G,OAxED,WAAO,IAAD,EACcC,mBAAS,IADvB,mBACXC,EADW,KACDC,EADC,OAEcF,mBAAS,IAFvB,mBAEXG,EAFW,KAEDC,EAFC,OAGgBJ,mBAASK,SAHzB,mBAGXC,EAHW,KAGAC,EAHA,KAsBlB,OAjBAC,qBAAU,WACRC,IACGC,KADH,UARa,iDAQb,eAGI,CAAET,SAAUA,EAAUE,SAAUA,GAChC,CACEQ,QAAS,CACP,eAAgB,sBAIrBC,MAAK,SAAAC,GAEJN,EAA4B,MAAfM,EAAIC,KAAK,SAEzB,CAACb,EAAUE,IAGZ,6BAASY,GAAG,aAAaC,UAAU,cACjC,yBAAKD,GAAG,iBACN,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qEACb,yBAAKA,UAAU,iBACb,wBAAIA,UAAU,kBAAd,eACA,6BACE,yBAAKA,UAAU,0BACb,0BAAMA,UAAU,cACd,yBAAKA,UAAU,cACb,2BACEA,UAAU,eACVC,KAAK,OACLC,YAAY,WACZC,SAAU,SAAAC,GAAK,OAAIlB,EAAYkB,EAAMC,OAAOC,QAC5CC,UAAQ,KAGZ,yBAAKP,UAAU,cACb,2BACEA,UAAU,eACVC,KAAK,WACLC,YAAY,WACZC,SAAU,SAAAC,GAAK,OAAIhB,EAAYgB,EAAMC,OAAOC,QAC5CC,UAAQ,KAGZ,kBAAC,IAAD,CAAMC,QAAS,SAAAJ,GAAK,OAAKd,EAAiC,KAAvBc,EAAMK,kBAAuBC,GAAI,UACpE,4BACET,KAAK,SACLD,UAAU,qCAFZ,YAQF,kBAAC,IAAD,CAAMU,GAAI,KAAK,gCAAQ,uD,6CCpD5BC,G,cAhBE,SAAC,GAA0C,IAAxCC,EAAuC,EAAvCA,QAASC,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAExC,OACI,0BAAMf,GAAG,OAAOgB,SAAU,SAAAX,GAAK,OAAKQ,EAAkCC,EAAYT,GAApCA,EAAMK,mBAClD,2BACEV,GAAG,QACHE,KAAK,OACLK,MAAOM,EACPT,SAAU,SAAAC,GAAUU,EAAWV,EAAMC,OAAOC,QAC5CJ,YAAY,QAEd,4BAAQH,GAAG,aAAaE,KAAK,UAAS,uBAAGD,UAAU,iBAAiBD,GAAG,aAAjC,Y,iBCoC/BiB,G,OA/CC,SAAAC,GACd,IAAIC,EAEJ,OAAQD,EAAML,QAAQ3B,UACpB,KAAKgC,EAAMhC,SACTiC,EACE,6BACE,4BAAQlB,UAAU,yBAAlB,OACA,yBAAKA,UAAU,+BACb,yBAAKA,UAAU,oCACb,uBAAGA,UAAU,0BAA0BiB,EAAML,QAAQA,YAK7D,MAEF,IAAK,SACHM,EAAUD,EAAML,QAAQO,OAASF,EAAMhC,SACrC,yBAAKe,UAAU,iBACb,uBAAGA,UAAU,yBAAb,wBAA2DiB,EAAML,QAAQQ,SAAzE,MAGF,yBAAKpB,UAAU,iBACb,uBAAGA,UAAU,yBAAyBiB,EAAML,QAAQA,UAGxD,MAEF,QACEM,EACE,6BACE,4BAAQlB,UAAU,yBACfiB,EAAML,QAAQ3B,UAEjB,yBAAKe,UAAU,iCACb,yBAAKA,UAAU,8BACb,uBAAGA,UAAU,yBAAyBiB,EAAML,QAAQA,YAOhE,OAAOM,IC1BMG,G,OAhBC,SAAAJ,GACZ,OACA,oCACE,kBAAC,IAAD,CAAgBjB,UAAU,YACvBiB,EAAMK,SAASC,KAAI,SAACX,EAASY,GAAV,OAClB,yBAAKC,IAAKD,GACR,6BACE,kBAAC,EAAD,CAASZ,QAASA,EAAS3B,SAAUgC,EAAMhC,oBCuB1CyC,G,OAhCD,SAAAT,GACZ,OACE,oCACE,kBAAC,IAAD,CAAgBjB,UAAU,mBACvBiB,EAAMU,MAAMJ,KAAI,SAACK,EAAMJ,GAAP,OACf,yBAAKC,IAAKD,GACR,yBACEhB,QAAS,SAAAJ,GAAK,OACZa,EAAMY,cAAgBD,EAAKR,SACvBhB,EAAMK,iBACNQ,EAAMa,WAAW1B,EAAOwB,EAAKR,YAGlCH,EAAMY,cAAgBD,EAAKR,SAC1B,yBAAKpB,UAAU,2BACb,uBAAGA,UAAU,kCAAb,SACA,gCAAS4B,EAAKR,WAGhB,yBAAKpB,UAAU,aACb,uBAAGA,UAAU,kCAAb,SACA,gCAAS4B,EAAKR,oBCVjBW,EAZE,SAAAd,GACf,OACE,yBAAKjB,UAAU,WACb,yBAAKA,UAAU,qBACb,4BACE,4CAAkBiB,EAAMhC,SAAxB,YCKK+C,EAVG,WAChB,OACE,yBAAKhC,UAAU,WACb,wBAAIA,UAAU,YACZ,gDP6FOiC,EA3EE,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAAe,EACLlD,mBAAS,IADJ,mBAC1BC,EAD0B,KAChBkD,EADgB,OAETnD,mBAAS,IAFA,mBAE1B4C,EAF0B,KAEpBQ,EAFoB,OAGPpD,mBAAS,IAHF,mBAG1B2C,EAH0B,KAGnBU,EAHmB,OAIHrD,mBAAS,IAJN,mBAI1B4B,EAJ0B,KAIjBE,EAJiB,OAKD9B,mBAAS,IALR,mBAK1BsC,EAL0B,KAKhBgB,EALgB,KAOjC9C,qBAAU,WAAO,IACPP,EAAasD,IAAYC,MAAMN,EAASO,QAAxCxD,SAERkD,EAAQlD,GACRmD,EAFa,WAGbM,KACA5D,EAAS6D,IAhBI,mDAiBNC,KAAK,WAAY,CAAE3D,WAAU2C,KALvB,cAMZ,CAACM,EAASO,SAGbjD,qBAAU,WACRV,EAAO+D,GAAG,YAAY,SAAAjB,GACpBQ,EAAQR,QAET,CAACA,IAGJpC,qBAAU,WACRV,EAAO+D,GAAG,gBAAgB,SAAAjC,GACxB0B,GAAY,SAAAhB,GAAQ,4BAAQA,GAAR,CAAkBV,YAEvC,IAGH,IASM8B,EAAW,WACfjD,IAAMqD,IAAN,UA7Ca,iDA6Cb,2BAA+ClD,MAAK,SAAAC,GAClDwC,EAASxC,EAAIC,UAYjB,OACE,oCACE,yBAAKE,UAAU,kBACb,yBAAKA,UAAU,iBACb,kBAAC,EAAD,CAAUf,SAAUA,EAAU2C,KAAMA,IACpC,kBAAC,EAAD,CAASN,SAAUA,EAAUrC,SAAUA,IACvC,kBAAC,EAAD,CAAU2B,QAASA,EAASE,WAAYA,EAAYD,YA7BxC,SAAAT,GAClBA,EAAMK,iBACFG,IACF9B,EAAO8D,KAAK,eAAgBhC,GAC5BE,EAAW,SA4BT,yBAAKd,UAAU,kBACb,yBAAKA,UAAU,YACb,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAO2B,MAAOA,EAAOE,YAAaD,EAAM3C,SAAUA,EAAU6C,WAnBnD,SAAC1B,EAAO2C,GACzB3C,EAAMK,iBACN6B,EAAY,IACZxD,EAAO8D,KAAK,aAAchB,GAC1B9C,EAAO8D,KAAK,YAAaG,WQzCdC,G,OA/BF,WAAO,IAAD,EACWhE,mBAAS,IADpB,mBACVC,EADU,KACAkD,EADA,KAGjB,OACE,6BAASpC,GAAG,QAAQC,UAAU,cAC5B,yBAAKD,GAAG,iBACN,yBAAKC,UAAU,aACb,yBAAKA,UAAU,kBACb,yBAAKA,UAAU,qEACb,wBAAIA,UAAU,gCAAd,kBACA,yBAAKA,UAAU,QACb,yBAAKA,UAAU,0BACb,kBAAC,IAAD,CAAMQ,QAAS,SAAAJ,GAAK,OAAKnB,EAAoC,KAAzBmB,EAAMK,kBAAyBC,GAAI,CAACuC,SAAU,YAAaR,OAAO,aAAD,OAAexD,KAClH,0BAAMe,UAAU,aAAaD,GAAG,aAC9B,yBAAKC,UAAU,cACb,2BAAOA,UAAU,eAAeC,KAAK,OAAOC,YAAY,WAAWC,SAAU,SAAAC,GAAK,OAAI+B,EAAQ/B,EAAMC,OAAOC,WAE7G,4BAAQL,KAAK,SAASD,UAAU,qCAAhC,YAGJ,kBAAC,IAAD,CAAMU,GAAI,UAAU,4BAAQwC,MAAO,CAACC,MAAM,UAAU,qD,2EC2CvDC,E,kDA7Db,WAAYnC,GAAQ,IAAD,8BACjB,cAAMA,IACDoC,QAAUC,IAAMC,YACrB,EAAKC,MAAQ,CACXC,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,KAAMC,KAAM,MAAOC,MAAO,KAChD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,cAAeC,MAAO,cAAeC,KAAM,MAAOC,MAAO,MAEpEC,KAAM,IAbS,E,gEAkBjBC,KAAKC,gB,oCAGQ,IAAD,OACZvE,IAAMqD,IAAI,sEAAsElD,MAAK,SAACC,GACpF,EAAKoE,SAAS,CACZH,KAAMjE,EAAIC,OAEZ,IAAIoE,EAAS,GACb,IAAK,IAAIC,KAAK,EAAKX,MAAMM,KAAM,CAC7B,IAAI1D,EAAQ,CACVL,GAAI,EAAKyD,MAAMM,KAAKK,GAAGC,IACvBnE,KAAM,EAAKuD,MAAMM,KAAKK,GAAGlE,KACzBoE,KAAMC,IAAO,IAAIC,KAAK,EAAKf,MAAMM,KAAKK,GAAGE,OAAOG,OAAO,cACvDC,KAAMH,IAAO,IAAIC,KAAK,EAAKf,MAAMM,KAAKK,GAAGE,OAAOG,OAAO,YACvDrD,KAAM,EAAKqC,MAAMM,KAAKK,GAAGhD,KACzBS,KAAM,EAAK4B,MAAMM,KAAKK,GAAGvC,KACzB8C,YAAa,EAAKlB,MAAMM,KAAKK,GAAGO,aAGlCR,EAAOS,KAAKvE,GAEd,EAAK6D,SAAS,CACZH,KAAMI,S,+BAMV,OACE,yBAAKlE,UAAU,kBACb,kBAAC,IAAD,CACE4E,SAAO,EACPC,UAAQ,EACRC,OAAK,EACLhF,KAAMiE,KAAKP,MACXxD,UAAU,a,GAvDMsD,IAAMyB,WCgEjBC,E,kDA9Db,WAAY/D,GAAQ,IAAD,8BACjB,cAAMA,IACDoC,QAAUC,IAAMC,YACrB,EAAKC,MAAQ,CACXC,QAAS,CACP,CAAEC,MAAO,KAAMC,MAAO,KAAMC,KAAM,MAAOC,MAAO,KAChD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,SAAUC,MAAO,SAAUC,KAAM,MAAOC,MAAO,KACxD,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,KACpD,CAAEH,MAAO,UAAWC,MAAO,WAAYC,KAAM,MAAOC,MAAO,KAC3D,CAAEH,MAAO,OAAQC,MAAO,OAAQC,KAAM,MAAOC,MAAO,MAEtDC,KAAM,IAbS,E,gEAkBjBC,KAAKC,gB,oCAGQ,IAAD,OACZvE,IAAMqD,IAAI,0EAA0ElD,MAAK,SAACC,GACxF,EAAKoE,SAAS,CACZH,KAAMjE,EAAIC,OAGZ,IAAIoE,EAAS,GAEb,IAAK,IAAIC,KAAK,EAAKX,MAAMM,KAAM,CAC7B,IAAIlD,EAAU,CACZb,GAAI,EAAKyD,MAAMM,KAAKK,GAAGC,IACvBC,KAAMC,IAAO,IAAIC,KAAK,EAAKf,MAAMM,KAAKK,GAAGE,OAAOG,OAAO,cACvDC,KAAMH,IAAO,IAAIC,KAAK,EAAKf,MAAMM,KAAKK,GAAGE,OAAOG,OAAO,cACvDS,OAAQ,EAAKzB,MAAMM,KAAKK,GAAGc,OAC3BrD,KAAM,EAAK4B,MAAMM,KAAKK,GAAGvC,KACzBN,SAAU,EAAKkC,MAAMM,KAAKK,GAAGvD,QAC7BX,KAAM,EAAKuD,MAAMM,KAAKK,GAAGlE,MAE3BiE,EAAOS,KAAK/D,GAEd,EAAKqD,SAAS,CACZH,KAAMI,S,+BAMV,OACE,yBAAKlE,UAAU,kBACb,kBAAC,IAAD,CACE4E,SAAO,EACPC,UAAQ,EACRK,OAAK,EACLpF,KAAMiE,KAAKP,MACXxD,UAAU,a,GAxDQsD,IAAMyB,W,oCC2KnBrD,E,kDA3Kb,WAAYT,GAAQ,IAAD,8BACjB,cAAMA,IACDoC,QAAUC,IAAMC,YACrB,EAAKC,MAAQ,CACX2B,MAAM,EACNC,OAAQ,GACRC,YAAa,GACbC,cAAe,SACfC,QAAS,IARM,E,6DAWFnF,GACf2D,KAAKE,SAAS,CACZoB,YAAajF,EAAMC,OAAOC,QAE5BkF,QAAQC,IAAIrF,EAAMC,OAAOC,S,yCAGRF,GACjB2D,KAAKE,SAAS,CACZqB,cAAelF,EAAMC,OAAOC,QAE9BkF,QAAQC,IAAIrF,EAAMC,OAAOC,S,oCAIzByD,KAAKE,SAAS,CACZkB,MAAM,M,iCAICf,EAAKsB,EAAaC,GAC3B5B,KAAKE,SAAS,CACZkB,MAAM,EACNC,OAAQhB,EACRiB,YAAaK,EACbJ,cAAeK,M,0CAKjB5B,KAAK6B,e,mCAGO,IAAD,OACXnG,IAAMqD,IAAI,iEAAiElD,MAAK,SAACC,GAC/E,EAAKoE,SAAS,CACZsB,QAAS1F,EAAIC,Y,+BAKV+F,EAAQC,EAAUC,GAEzB,IACIC,EADOzB,KAAKA,KAAK0B,OACIC,WACzBzG,IACG0G,IADH,iFAE8EN,GAC1E,CACEzE,SAAU0E,EACVM,OAAQJ,EACRK,OAAQN,GAEV,CACEpG,QAAS,CACP,eAAgB,sBAIrBC,MAAK,SAACC,GACLyG,MAAM,sBACNC,OAAOrE,SAASsE,c,wCAIH,IAAD,OAChB,OAAOzC,KAAKP,MAAM+B,QAAQhE,KAAI,SAACkF,EAAQjF,GAAW,IACxC4C,EAA2CqC,EAA3CrC,IAAKhD,EAAsCqF,EAAtCrF,SAAUsF,EAA4BD,EAA5BC,QAASN,EAAmBK,EAAnBL,OAAQC,EAAWI,EAAXJ,OAExC,OACE,wBAAI5E,IAAK2C,GACP,4BAAKA,GACL,4BAAKhD,GACL,4BAAKkD,IAAO,IAAIC,KAAKmC,IAAUlC,OAAO,4BACtC,4BAAK4B,EAAS9B,IAAO,IAAIC,KAAK6B,IAAS5B,OAAO,2BAA6B,kBAC3E,4BAAK6B,GACL,4BACE,kBAACM,EAAA,EAAD,CACEC,QAAQ,UACRpG,QAAS,kBAAM,EAAKqG,WAAWzC,EAAKhD,EAAUiF,KAFhD,e,+BAYA,IAAD,OACP,OACE,yBACEnD,MAAO,CACLW,MAAO,MACPiD,WAAY,OACZC,YAAa,OACbC,UAAW,QAGb,kBAACC,EAAA,EAAD,CAAOrC,SAAO,EAACC,UAAQ,EAACK,OAAK,EAAC0B,QAAQ,OAAO7G,GAAG,YAC9C,+BACE,4BACE,kCACA,oCACA,2CACA,yCACA,sCACA,wCAGJ,+BAAQgE,KAAKmD,oBAEf,6BACA,kBAACC,EAAA,EAAD,CAAOhC,KAAMpB,KAAKP,MAAM2B,KAAMiC,OAAQ,kBAAM,EAAKC,gBAC/C,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,mBAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAACC,EAAA,EAAD,CACE3G,SAAU,kBACR,EAAK4G,SACH,EAAKnE,MAAM4B,OACX,EAAK5B,MAAM6B,YACX,EAAK7B,MAAM8B,iBAIf,kBAACoC,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEzH,MAAOyD,KAAKP,MAAM6B,YAClBlF,SAAU,SAACC,GAAD,OAAW,EAAK4H,iBAAiB5H,IAC3CH,KAAK,OACLC,YAAY,kBACZK,UAAQ,KAGZ,kBAACmH,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEE,GAAG,SACH3H,MAAOyD,KAAKP,MAAM8B,cAClBnF,SAAU,SAACC,GAAD,OAAW,EAAK8H,mBAAmB9H,KAE7C,0CACA,8CAGJ,kBAACuG,EAAA,EAAD,CAAQC,QAAQ,UAAU3G,KAAK,UAA/B,UAKJ,kBAACkH,EAAA,EAAMgB,OAAP,Y,GArKU7E,IAAMyB,WCuFXqD,MAvFf,WAAoB,IAAD,EACOpJ,oBAAS,GADhB,mBACVmG,EADU,KACJkD,EADI,OAEerJ,mBAAS,IAFxB,mBAEV8G,EAFU,KAEAwC,EAFA,OAGmBtJ,mBAAS,UAH5B,mBAGV+G,EAHU,KAGEwC,EAHF,KAIXlB,EAAc,kBAAMgB,GAAQ,IAoClC,OACE,6BACE,yBAAKnF,MAAO,CAAEW,MAAO,OAAQ2E,OAAQ,MAAOxB,UAAW,MAAOF,WAAY,OACxE,kBAACH,EAAA,EAAD,CAAQC,QAAQ,UAAUpG,QAtCb,kBAAM6H,GAAQ,KAsC3B,aAIF,yBAAKrI,UAAU,SACb,kBAACmH,EAAA,EAAD,CAAOhC,KAAMA,EAAMiC,OAAQC,GACzB,kBAACF,EAAA,EAAMG,OAAP,CAAcC,aAAW,GACvB,kBAACJ,EAAA,EAAMK,MAAP,kBAEF,kBAACL,EAAA,EAAMM,KAAP,KACE,kBAACC,EAAA,EAAD,CAAM3G,SAxCA,WAEd,IACIiF,EADOzB,KAAKA,KAAK0B,OACIC,WAEzBzG,IACGC,KACC,kEACA,CACE0B,SAAU0E,EACVY,QAASV,EACTI,OAAQ,KACRC,OAAQN,GAEV,CACEpG,QAAS,CACP,eAAgB,sBAIrBC,MAAK,SAACC,GACLyG,MAAM,uBACNe,IACAd,OAAOrE,SAASsE,cAkBV,kBAACkB,EAAA,EAAKE,MAAN,CAAYC,UAAU,YACpB,kBAACH,EAAA,EAAKI,MAAN,kBACA,kBAACJ,EAAA,EAAKK,QAAN,CACE5H,SAlDS,SAACC,GACxBkI,EAAYlI,EAAMC,OAAOC,QAkDXL,KAAK,OACLC,YAAY,kBACZK,UAAQ,KAGZ,kBAACmH,EAAA,EAAKE,MAAN,CAAYC,UAAU,cACpB,kBAACH,EAAA,EAAKI,MAAN,oBACA,kBAACJ,EAAA,EAAKK,QAAN,CACEE,GAAG,SACH3H,MAAOyF,EACP5F,SA1DW,SAACC,GAC1BmI,EAAcnI,EAAMC,OAAOC,SA2Db,0CACA,8CAGJ,kBAACqG,EAAA,EAAD,CAAQC,QAAQ,UAAU3G,KAAK,UAA/B,YAKJ,kBAACkH,EAAA,EAAMgB,OAAP,QAGJ,kBAAC,EAAD,QCtDSM,G,yDAxBb,WAAYxH,GAAQ,IAAD,8BACjB,cAAMA,IAGRuC,MAAQ,GAFN,EAAKH,QAAUC,IAAMC,YAFJ,E,qDAMjB,OACE,oCACA,kBAACmF,EAAA,EAAD,CAAM1I,UAAU,SAAS2I,iBAAiB,QAAQ5I,GAAG,4BACnD,kBAAC6I,EAAA,EAAD,CAAK5I,UAAU,QAAQ6I,SAAS,eAAeC,MAAM,iBACnD,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,iBAAiBC,MAAM,mBACnC,kBAAC,EAAD,OAEF,kBAACF,EAAA,EAAD,CAAKC,SAAS,QAAQC,MAAM,SAC1B,kBAAC,EAAD,a,GAjBcxF,IAAMyB,YCiBfgE,G,OApBD,WACZ,OACE,yBAAKhJ,GAAG,QACN,4BACE,uBAAGC,UAAU,iCAAiCD,GAAG,aAAjD,iBAGA,0CAEF,yBAAKC,UAAU,aACb,kBAAC,IAAD,CAAMU,GAAG,KACP,4BAAQX,GAAG,kBAAX,YAGJ,kBAAC,EAAD,MACA,yBAAKA,GAAG,eAAR,WCDSiJ,G,OAXH,WACV,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWnG,IACjC,kBAAC,IAAD,CAAOiG,KAAK,SAASE,UAAWpK,IAChC,kBAAC,IAAD,CAAOkK,KAAK,YAAYE,UAAWlH,IACnC,kBAAC,IAAD,CAAOgH,KAAK,SAASE,UAAWJ,OCFlB1J,QACW,cAA7BkH,OAAOrE,SAASkH,UAEe,UAA7B7C,OAAOrE,SAASkH,UAEhB7C,OAAOrE,SAASkH,SAASC,MACvB,2DCZNC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,SD2HpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBhK,MAAK,SAAAiK,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLxE,QAAQwE,MAAMA,EAAMpJ,c","file":"static/js/main.e8e3b2ad.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport queryString from \"query-string\";\nimport io from \"socket.io-client\";\nimport axios from \"axios\";\n\n// style\nimport \"./Chatroom.css\";\n\n// components\nimport Inputbox from \"../Inputbox/Inputbox\";\nimport Chatbox from \"../Chatbox/Chatbox\";\nimport Rooms from \"../Rooms/Rooms\";\nimport Chatinfo from \"../Chatinfo/Chatinfo\";\nimport Roomsinfo from \"../Roomsinfo/Roomsinfo\";\n\n// for local\n// const port = process.env.port || 5000;\n// const endpoint = `http://localhost:${port}`;\n\n\n// heroku server\nconst endpoint = 'https://chat-application-backend.herokuapp.com';\nlet socket;\n\nconst Chatroom = ({ location }) => {\n  const [username, setName] = useState(\"\");\n  const [room, setRoom] = useState(\"\");\n  const [rooms, setRooms] = useState([]);\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const { username } = queryString.parse(location.search);\n    const room = \"Default\";\n    setName(username);\n    setRoom(room);\n    getRooms();\n    socket = io(endpoint);\n    socket.emit(\"new-user\", { username, room });\n  }, [location.search]);\n\n  // listens for event new-room\n  useEffect(()=>{\n    socket.on(\"new-room\", room => {\n      setRoom(room);\n    });\n  }, [room])\n\n  // messages received\n  useEffect(() => {\n    socket.on(\"chat-message\", message => {\n      setMessages(messages => [...messages, message]);\n    });\n  }, []);\n\n  // sends a message\n  const sendMessage = event => {\n    event.preventDefault();\n    if (message) {\n      socket.emit(\"send-message\", message);\n      setMessage(\"\");\n    }\n  };\n\n  // get all rooms from the database\n  const getRooms = () => {\n    axios.get(`${endpoint}/room/room-list-active`).then(res => {\n      setRooms(res.data);\n    });\n  };\n\n  // leaves and joins a new room\n  const switchRoom = (event, newRoom) => {\n    event.preventDefault();\n    setMessages([]);\n    socket.emit('leave-room', room);\n    socket.emit('join-room', newRoom);\n  }\n\n  return (\n    <>\n      <div className=\"outerContainer\">        \n        <div className=\"chatContainer\">\n          <Chatinfo username={username} room={room} />\n          <Chatbox messages={messages} username={username} />\n          <Inputbox message={message} setMessage={setMessage} sendMessage={sendMessage}\n          />\n        </div>\n        <div className=\"roomsContainer\">\n          <div className=\"roomList\">\n            <Roomsinfo />\n            <Rooms rooms={rooms} currentroom={room} username={username} switchRoom={switchRoom}/>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Chatroom;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nimport \"./Login.css\";\n\n// const endpoint = `http://localhost:5000/user/login`; -> LOCAL ENDPOINT\n\n// heroku server\nconst endpoint = 'https://chat-application-backend.herokuapp.com';\n\nconst Login = () => {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [condition, setCondition] = useState(Boolean);\n\n  useEffect(() => {\n    axios\n      .post(\n        `${endpoint}/user/login`,\n        { username: username, password: password },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        }\n      )\n      .then(res => {\n        //localStorage.setItem('token', res.data.token);\n        setCondition(res.data[0] != null)\n      });\n  }, [username, password]);\n\n  return (\n    <section id=\"loginCover\" className=\"min-vh-100\">\n      <div id=\"cover-caption\">\n        <div className=\"container\">\n          <div className=\"row text-white\">\n            <div className=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n              <div className=\"formContainer\">\n                <h1 className=\"display-4 py-2\">Admin Login</h1>\n                <div>\n                  <div className=\"justify-content-center\">\n                    <form className=\"form-group\">\n                      <div className=\"form-group\">\n                        <input\n                          className=\"form-control\"\n                          type=\"text\"\n                          placeholder=\"Username\"\n                          onChange={event => setUsername(event.target.value)}\n                          required\n                        />\n                      </div>\n                      <div className=\"form-group\">\n                        <input\n                          className=\"form-control\"\n                          type=\"password\"\n                          placeholder=\"Password\"\n                          onChange={event => setPassword(event.target.value)}\n                          required\n                        />\n                      </div>\n                      <Link onClick={event => !condition?event.preventDefault():null} to={'/admin'}>\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-primary btn-lg full-width\"\n                      >\n                        Submit\n                      </button>\n                      </Link>\n                    </form>\n                    <Link to={'/'}><strong><u>back to main</u></strong></Link>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Login;\n","import React from \"react\";\nimport './Inputbox.css';\n\nconst Inputbox = ({ message, sendMessage, setMessage }) => {\n  \n  return (\n      <form id=\"form\" onSubmit={event => !message ? event.preventDefault(): sendMessage(event)}>\n        <input\n          id=\"input\"\n          type=\"text\"\n          value={message}\n          onChange={event => {setMessage(event.target.value);}}\n          placeholder=\"Aa.\"\n        />\n        <button id=\"sendButton\" type=\"submit\"><i className=\"material-icons\" id=\"send-icon\">send</i></button>\n      </form>\n  );\n};\n\nexport default Inputbox;\n","import React from \"react\";\nimport \"./Message.css\";\n\nconst Message = props => {\n  let content;\n\n  switch (props.message.username) {\n    case props.username:\n      content = (\n        <div>\n          <strong className=\"userMessage colorDark\">You</strong>\n          <div className=\"messageContainer justifyEnd\">\n            <div className=\"messageBox-sender backgroundBlue\">\n              <p className=\"messageText colorWhite\">{props.message.message}</p>\n            </div>\n          </div>\n        </div>\n      );\n      break;\n\n    case \"System\":\n      content = props.message.user === props.username ? (\n        <div className=\"systemMessage\">\n          <p className=\"messageText colorDark\">You joined the room, {props.message.roomname}.</p>\n        </div>\n      ) : (\n        <div className=\"systemMessage\">\n          <p className=\"messageText colorDark\">{props.message.message}</p>\n        </div>\n      );\n      break;\n\n    default:\n      content = (\n        <div>\n          <strong className=\"chatMessage colorDark\">\n            {props.message.username}\n          </strong>\n          <div className=\"messageContainer justifyStart\">\n            <div className=\"messageBox backgroundLight\">\n              <p className=\"messageText colorDark\">{props.message.message}</p>\n            </div>\n          </div>\n        </div>\n      );\n  }\n\n  return content;\n};\n\nexport default Message;\n","import React from \"react\";\r\nimport ScrollToBottom from \"react-scroll-to-bottom\";\r\nimport Message from \"../Message/Message\";\r\nimport './Chatbox.css';\r\n\r\nconst Chatbox = props => {\r\n    return (\r\n    <>\r\n      <ScrollToBottom className=\"messages\">\r\n        {props.messages.map((message, index) => (\r\n          <div key={index}>\r\n            <div>\r\n              <Message message={message} username={props.username} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </ScrollToBottom>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Chatbox;\r\n","import React from \"react\";\nimport ScrollToBottom from \"react-scroll-to-bottom\";\nimport \"./Rooms.css\";\nconst Rooms = props => {\n  return (\n    <>\n      <ScrollToBottom className=\"rooms-container\">\n        {props.rooms.map((room, index) => (\n          <div key={index}>\n            <div\n              onClick={event =>\n                props.currentroom === room.roomname\n                  ? event.preventDefault()\n                  : props.switchRoom(event, room.roomname)\n              }\n            >\n              {props.currentroom === room.roomname ? (\n                <div className=\"room-item room-selected\">\n                  <i className=\"material-icons enter-icon mr-5\">input</i>\n                  <strong>{room.roomname}</strong>\n                </div>\n              ) : (\n                <div className=\"room-item\">\n                  <i className=\"material-icons enter-icon mr-5\">input</i>\n                  <strong>{room.roomname}</strong>\n                </div>\n              )}\n            </div>\n          </div>\n        ))}\n      </ScrollToBottom>\n    </>\n  );\n};\n\nexport default Rooms;\n","import React from \"react\";\n\nconst Chatinfo = props => {\n  return (\n    <div className=\"infoBar\">\n      <div className=\"leftChatContainer\">\n        <h3>\n          <strong>Welcome, {props.username} !!!</strong> \n        </h3>\n      </div>\n    </div>\n  );\n};\n\nexport default Chatinfo;\n","import React from \"react\";\n\nconst Roomsinfo = () => {\n  return (\n    <div className=\"infoBar\">\n      <h3 className=\"centered\">\n        <strong>Room List</strong>\n      </h3>\n    </div>\n  );\n};\n\nexport default Roomsinfo;\n","import React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport \"./Join.css\";\n\nconst Join = () => {\n  const [username, setName] = useState('');\n\n  return (\n    <section id=\"cover\" className=\"min-vh-100\">\n      <div id=\"cover-caption\">\n        <div className=\"container\">\n          <div className=\"row text-white\">\n            <div className=\"col-xl-5 col-lg-6 col-md-8 col-sm-10 mx-auto text-center form p-4\">\n              <h1 className=\"display-4 py-1 text-truncate\">Enter Username</h1>\n              <div className=\"px-2\">\n                <div className=\"justify-content-center\">\n                  <Link onClick={event => !username ? event.preventDefault() : null} to={{pathname: \"/chatroom\", search: `?username=${username}`}}>\n                    <form className=\"form-group\" id=\"join-form\">\n                      <div className=\"form-group\">\n                        <input className=\"form-control\" type=\"text\" placeholder=\"Username\" onChange={event => setName(event.target.value)} />\n                      </div>\n                      <button type=\"submit\" className=\"btn btn-primary btn-lg full-width\">Submit</button>\n                    </form>\n                  </Link>\n                  <Link to={'/login'}><strong style={{color:\"white\"}}><u>admin login</u></strong></Link>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Join;\n","import React from \"react\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport { MDBDataTable } from \"mdbreact\";\n\nclass AdminEvents extends React.Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n    this.state = {\n      columns: [\n        { label: \"ID\", field: \"id\", sort: \"asc\", width: 150 },\n        { label: \"Type\", field: \"type\", sort: \"asc\", width: 150 },\n        { label: \"Date\", field: \"date\", sort: \"asc\", width: 150 },\n        { label: \"Time\", field: \"time\", sort: \"asc\", width: 150 },\n        { label: \"User\", field: \"user\", sort: \"asc\", width: 150 },\n        { label: \"Room\", field: \"room\", sort: \"asc\", width: 150 },\n        { label: \"Description\", field: \"description\", sort: \"asc\", width: 150 },\n      ],\n      rows: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  fetchEvents() {\n    axios.get(\"https://chat-application-backend.herokuapp.com/event/event-history\").then((res) => {\n      this.setState({\n        rows: res.data,\n      });\n      let newArr = [];\n      for (let x in this.state.rows) {\n        let event = {\n          id: this.state.rows[x]._id,\n          type: this.state.rows[x].type,\n          date: Moment(new Date(this.state.rows[x].date)).format(\"MM/DD/YYYY\"),\n          time: Moment(new Date(this.state.rows[x].date)).format(\"hh:mm:ss\"),\n          user: this.state.rows[x].user,\n          room: this.state.rows[x].room,\n          description: this.state.rows[x].description,\n        };\n\n        newArr.push(event);\n      }\n      this.setState({\n        rows: newArr,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"tableContainer\">\n        <MDBDataTable\n          striped\n          bordered\n          small\n          data={this.state}\n          className=\"mdb\"\n        ></MDBDataTable>\n      </div>\n    );\n  }\n}\n\nexport default AdminEvents;\n","import React from \"react\";\n//import { Table } from 'react-bootstrap';\nimport axios from \"axios\";\nimport Moment from \"moment\";\nimport { MDBDataTable } from \"mdbreact\";\n\nclass AdminMessages extends React.Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n    this.state = {\n      columns: [\n        { label: \"ID\", field: \"id\", sort: \"asc\", width: 150 },\n        { label: \"Date\", field: \"date\", sort: \"asc\", width: 150 },\n        { label: \"Time\", field: \"time\", sort: \"asc\", width: 150 },\n        { label: \"Sender\", field: \"sender\", sort: \"asc\", width: 150 },\n        { label: \"Room\", field: \"room\", sort: \"asc\", width: 150 },\n        { label: \"Message\", field: \"messages\", sort: \"asc\", width: 150 },\n        { label: \"Type\", field: \"type\", sort: \"asc\", width: 150 },\n      ],\n      rows: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchEvents();\n  }\n\n  fetchEvents() {\n    axios.get(\"https://chat-application-backend.herokuapp.com/message/message-history\").then((res) => {\n      this.setState({\n        rows: res.data,\n      });\n\n      let newArr = [];\n\n      for (let x in this.state.rows) {\n        let message = {\n          id: this.state.rows[x]._id,\n          date: Moment(new Date(this.state.rows[x].date)).format(\"MM/DD/YYYY\"),\n          time: Moment(new Date(this.state.rows[x].date)).format(\"hh:mm:ss a\"),\n          sender: this.state.rows[x].sender,\n          room: this.state.rows[x].room,\n          messages: this.state.rows[x].message,\n          type: this.state.rows[x].type,\n        };\n        newArr.push(message);\n      }\n      this.setState({\n        rows: newArr,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"tableContainer\">\n        <MDBDataTable\n          striped\n          bordered\n          hover\n          data={this.state}\n          className=\"mdb\"\n        />\n      </div>\n    );\n  }\n}\n\nexport default AdminMessages;\n","import React from \"react\";\nimport { Table, Button, Form, Modal } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Moment from \"moment\";\n\nclass Rooms extends React.Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n    this.state = {\n      show: false,\n      currId: \"\",\n      newRoomName: \"\",\n      newRoomStatus: \"active\",\n      myRooms: [],\n    };\n  }\n  handleChangeRoom(event) {\n    this.setState({\n      newRoomName: event.target.value,\n    });\n    console.log(event.target.value);\n  }\n\n  handleChangeStatus(event) {\n    this.setState({\n      newRoomStatus: event.target.value,\n    });\n    console.log(event.target.value);\n  }\n\n  handleClose() {\n    this.setState({\n      show: false,\n    });\n  }\n\n  handleShow(_id, roomNameArg, roomStatusArg) {\n    this.setState({\n      show: true,\n      currId: _id,\n      newRoomName: roomNameArg,\n      newRoomStatus: roomStatusArg,\n    });\n  }\n\n  componentDidMount() {\n    this.fetchRooms();\n  }\n\n  fetchRooms() {\n    axios.get(\"https://chat-application-backend.herokuapp.com/room/room-list\").then((res) => {\n      this.setState({\n        myRooms: res.data,\n      });\n    });\n  }\n\n  editRoom(roomId, roomName, roomStatus) {\n    //Get Current Date and Time\n    var date = Date(Date.now());\n    var dateStringify = date.toString();\n    axios\n      .put(\n        `https://chat-application-backend.herokuapp.com/room/room-status-update/${roomId}`,\n        {\n          roomname: roomName,\n          edited: dateStringify,\n          status: roomStatus,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        alert(\"A Room was edited!\");\n        window.location.reload();\n      });\n  }\n\n  renderTableData() {\n    return this.state.myRooms.map((myRoom, index) => {\n      const { _id, roomname, created, edited, status } = myRoom; //destructuring\n\n      return (\n        <tr key={_id}>\n          <td>{_id}</td>\n          <td>{roomname}</td>\n          <td>{Moment(new Date(created)).format(\"MM/DD/YYYY - hh:mm:ss a\")}</td>\n          <td>{edited ? Moment(new Date(edited)).format(\"MM/DD/YYYY - hh:mm:ss a\") : \"Not Applicable\"}</td>\n          <td>{status}</td>\n          <td>\n            <Button\n              variant=\"primary\"\n              onClick={() => this.handleShow(_id, roomname, status)}\n            >\n              Edit\n            </Button>\n          </td>\n        </tr>\n      );\n    });\n  }\n\n  render() {\n    return (\n      <div\n        style={{\n          width: \"90%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n          marginTop: \"3em\",\n        }}\n      >\n        <Table striped bordered hover variant=\"dark\" id=\"students\">\n          <thead>\n            <tr>\n              <th>ID</th>\n              <th>Room</th>\n              <th>Create Date</th>\n              <th>Edit Date</th>\n              <th>Status</th>\n              <th>Action</th>\n            </tr>\n          </thead>\n          <tbody>{this.renderTableData()}</tbody>\n        </Table>\n        <br></br>\n        <Modal show={this.state.show} onHide={() => this.handleClose()}>\n          <Modal.Header closeButton>\n            <Modal.Title>Edit Room</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form\n              onSubmit={() =>\n                this.editRoom(\n                  this.state.currId,\n                  this.state.newRoomName,\n                  this.state.newRoomStatus\n                )\n              }\n            >\n              <Form.Group controlId=\"roomName\">\n                <Form.Label>Room Name</Form.Label>\n                <Form.Control\n                  value={this.state.newRoomName}\n                  onChange={(event) => this.handleChangeRoom(event)}\n                  type=\"text\"\n                  placeholder=\"Enter Room Here\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group controlId=\"roomStatus\">\n                <Form.Label>Room Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={this.state.newRoomStatus}\n                  onChange={(event) => this.handleChangeStatus(event)}\n                >\n                  <option>active</option>\n                  <option>inactive</option>\n                </Form.Control>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Save\n              </Button>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer></Modal.Footer>\n        </Modal>\n      </div>\n    );\n  }\n}\n\nexport default Rooms;\n","import React, { useState } from \"react\";\nimport { Modal, Button, Form } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport Rooms from \"./room-list\";\n\nfunction RoomAdd() {\n  const [show, setShow] = useState(false);\n  const [roomName, setRoomName] = useState(\"\");\n  const [roomStatus, setRoomStatus] = useState(\"active\");\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  const handleChangeRoom = (event) => {\n    setRoomName(event.target.value);\n  };\n  const handleChangeStatus = (event) => {\n    setRoomStatus(event.target.value);\n  };\n  const addRoom = () => {\n    //Get Current Date and Time\n    var date = Date(Date.now());\n    var dateStringify = date.toString();\n\n    axios\n      .post(\n        \"https://chat-application-backend.herokuapp.com/room/create-room\",\n        {\n          roomname: roomName,\n          created: dateStringify,\n          edited: null,\n          status: roomStatus,\n        },\n        {\n          headers: {\n            \"Content-Type\": \"application/json\",\n          },\n        }\n      )\n      .then((res) => {\n        alert(\"A Room was created!\");\n        handleClose();\n        window.location.reload();\n      });\n  };\n\n  return (\n    <div>\n      <div style={{ width: \"10em\", margin: \"1em\", marginTop: \"2em\", marginLeft: \"3%\"}}>\n        <Button variant=\"primary\" onClick={handleShow}>\n          Add Room\n        </Button>\n      </div>\n      <div className=\"modal\">\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Add Room</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>\n            <Form onSubmit={addRoom}>\n              <Form.Group controlId=\"roomName\">\n                <Form.Label>Room Name</Form.Label>\n                <Form.Control\n                  onChange={handleChangeRoom}\n                  type=\"text\"\n                  placeholder=\"Enter Room Here\"\n                  required\n                />\n              </Form.Group>\n              <Form.Group controlId=\"roomStatus\">\n                <Form.Label>Room Status</Form.Label>\n                <Form.Control\n                  as=\"select\"\n                  value={roomStatus}\n                  onChange={handleChangeStatus}\n                >\n                  <option>active</option>\n                  <option>inactive</option>\n                </Form.Control>\n              </Form.Group>\n              <Button variant=\"primary\" type=\"submit\">\n                Submit\n              </Button>\n            </Form>\n          </Modal.Body>\n          <Modal.Footer></Modal.Footer>\n        </Modal>\n      </div>\n      <Rooms />\n    </div>\n  );\n}\n\nexport default RoomAdd;\n","import React from 'react';\nimport { Tabs, Tab } from 'react-bootstrap';\nimport  Events  from './events';\nimport Messages from './messages';\nimport Rooms from './rooms';\n\nimport \"./subcomponents.css\";\n\nclass AdminTabs extends React.Component {\n  constructor(props) {\n    super(props);\n    this.wrapper = React.createRef();\n  }\n  state = {};\n  render() {\n    return (\n      <>\n      <Tabs className=\"myTabs\" defaultActiveKey=\"rooms\" id=\"uncontrolled-tab-example\">\n        <Tab className=\"myTab\" eventKey=\"eventHistory\" title=\"Event History\">\n          <Events/>\n        </Tab>\n        <Tab eventKey=\"messageHistory\" title=\"Message History\">\n          <Messages/>\n        </Tab>\n        <Tab eventKey=\"rooms\" title=\"Rooms\">\n          <Rooms/>\n        </Tab>\n      </Tabs>\n      </> \n    );\n  }\n}\n\nexport default AdminTabs;\n","import React from \"react\";\nimport AdminTabs from \"./SubComponentsAdmin/tabs\";\nimport { Link } from \"react-router-dom\";\nimport \"./Admin.css\";\n\nconst Admin = () => {\n  return (\n    <div id=\"body\">\n      <h1>\n        <i className=\"material-icons enter-icon mr-2\" id=\"adminIcon\">\n          perm_identity\n        </i>\n        <b>Admin Page</b>\n      </h1>\n      <div className=\"logoutBtn\">\n        <Link to=\"/\">\n          <button id=\"adminLogoutBtn\">Logout</button>\n        </Link>\n      </div>\n      <AdminTabs />\n      <div id=\"adminFooter\">&nbsp;</div>\n    </div>\n  );\n};\n\nexport default Admin;\n","import React from \"react\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport Login from \"./components/Login/Login\";\nimport Chatroom from \"./components/Chatroom/Chatroom\";\nimport Join from \"./components/Join/Join\";\nimport Admin from \"./components/Admin/Admin\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Route path=\"/\" exact component={Join} />\n      <Route path=\"/login\" component={Login} />\n      <Route path=\"/chatroom\" component={Chatroom} />\n      <Route path=\"/admin\" component={Admin}/>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}